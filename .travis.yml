language: rust

addons:
  apt:
    sources:
    - sourceline: 'ppa:exonum/rocksdb'
    - sourceline: 'ppa:maarten-fonville/protobuf'
    - sourceline: 'ppa:fsgmhoward/shadowsocks-libev'
    packages:
    - binutils-dev
    - build-essential
    - cmake
    - g++
    - gcc
    - libcurl4-openssl-dev
    - libdw-dev
    - libelf-dev
    - libiberty-dev
    - libprotobuf-dev
    - librocksdb5.17
    - libsnappy-dev
    - libsodium-dev
    - libssl-dev
    - pkg-config
    - protobuf-compiler
    - unzip
    - zlib1g-dev

rust:
  # Feel free to bump this version if you need features of newer Rust.
  # Sync with badge in README.md
  - 1.35.0

matrix:
  allow_failures:
  - env: FEATURE=non-fatal-checks
  fast_finish: true

cache:
  cargo: true
  directories:
  - node_modules

dist: trusty

env:
  global:
  - DEADLINKS_VERS=0.3.0
  - SODIUM_VERS=1.0.16
  - RUSTFLAGS="-D warnings"
  - ROCKSDB_LIB_DIR=/usr/lib
  - SNAPPY_LIB_DIR=/usr/lib/x86_64-linux-gnu

jobs:
  include:
  # Formatting & other lints that do not require compilation
  - name: lints
    install:
    - rustup component add rustfmt
    - rustfmt -V
    - nvm install 8 && nvm use 8
    - npm install cspell
    - ./node_modules/.bin/cspell --version
    - npm install markdownlint-cli
    - ./node_modules/.bin/markdownlint --version
    script:
    - cargo fmt -- --check
    - find . -not -path "./target/**" -name "*.rs" | xargs ./node_modules/.bin/cspell
    - find . -not -path "./node_modules/*" -name "*.md" | xargs ./node_modules/.bin/cspell
    - find . -not -path "./node_modules/*" -name "*.md" | xargs ./node_modules/.bin/markdownlint --config .markdownlintrc

  # Clippy linting
  - name: clippy
    install:
    - rustup component add clippy
    - cargo clippy --version
    script:
    - cargo clippy --all -- -D warnings

  # Tests
  - name: linux-tests
    script:
    - cargo test --all

  # Tests
  - name: linux-benches
    script:
    - cargo bench --all --no-run

  # Non-fatal checks
  - name: deadlinks
    env: FEATURE=non-fatal-checks
    install:
    - cargo-deadlinks -V | grep $DEADLINKS_VERS || cargo install cargo-deadlinks --vers $DEADLINKS_VERS --force
    script:
    - cargo doc --no-deps
    - cargo deadlinks --dir target/doc
